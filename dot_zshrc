# zmodload zsh/zprof
if [[ $TERM_PROGRAM == "iTerm.app" ]]; then
  # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
  # Initialization code that may require console input (password prompts, [y/n]
  # confirmations, etc.) must go above this block; everything else may go below.
  if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
  fi

  [[ -f $(brew --prefix)/opt/powerlevel10k/powerlevel10k.zsh-theme ]] && source $(brew --prefix)/opt/powerlevel10k/powerlevel10k.zsh-theme

  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

  # More ZSH completion stuff
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  # Atuin
  export ATUIN_NOBIND="true"
  [[ -x $(brew --prefix)/bin/atuin ]] && eval "$(atuin init zsh)"
  # # bindkey "^[[A" history-beginning-search-backward
  [[ -x $(brew --prefix)/bin/atuin ]] && bindkey '^r' _atuin_search_widget
fi

if [[ $TERM_PROGRAM == "Apple_Terminal" ]]; then
  # More ZSH completion stuff
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  # Atuin
  export ATUIN_NOBIND="true"
  [[ -x $(brew --prefix)/bin/atuin ]] && eval "$(atuin init zsh)"
  # # bindkey "^[[A" history-beginning-search-backward
  [[ -x $(brew --prefix)/bin/atuin ]] && bindkey '^r' _atuin_search_widget

  eval "$(starship init zsh)"
fi

if [[ $TERM_PROGRAM == "vscode" ]]; then
  # More ZSH completion stuff
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  # Atuin
  export ATUIN_NOBIND="true"
  [[ -x $(brew --prefix)/bin/atuin ]] && eval "$(atuin init zsh)"
  # # bindkey "^[[A" history-beginning-search-backward
  [[ -x $(brew --prefix)/bin/atuin ]] && bindkey '^r' _atuin_search_widget

  eval "$(starship init zsh)"
fi

if [[ $TERM_PROGRAM == "zed" ]]; then
  # More ZSH completion stuff
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

  # Atuin
  export ATUIN_NOBIND="true"
  [[ -x $(brew --prefix)/bin/atuin ]] && eval "$(atuin init zsh)"
  # # bindkey "^[[A" history-beginning-search-backward
  [[ -x $(brew --prefix)/bin/atuin ]] && bindkey '^r' _atuin_search_widget

  eval "$(starship init zsh)"
fi

# ZSH completion stuff
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  # Location for post install script to install non-hombrew software completions
  FPATH="$HOME/.zfunc:$FPATH"

  autoload -Uz compinit
  compinit
fi

# Stuff for if we want to use Bash completion in ZSH
# autoload -U +X bashcompinit && bashcompinit
# source /opt/homebrew/etc/bash_completion.d/kubie.bash

# My aliases
alias ll="ls -lah"
[[ -x $(brew --prefix)/bin/awsume ]] && alias awsume=". awsume"

# Python Stuff
if [[ -x $(brew --prefix)/bin/pyenv ]]; then
  eval "$(pyenv init -)"
  export PYENV_VIRTUALENV_DISABLE_PROMPT=1
  eval "$(pyenv virtualenv-init -)"
fi

export POETRY_VIRTUALENVS_IN_PROJECT=true
export PATH="$HOME/.poetry/bin:$PATH"

# Some env vars
export HOMEBREW_BUNDLE_NO_LOCK=true
export HOMEBREW_BUNDLE_FILE=$HOME/.Brewfile

# Some paths
export PATH="$(brew --prefix)/opt/openssl@1.1/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH"

# Even More ZSH completion stuff
[[ -f $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# direnv
#[[ -x $(brew --prefix)/bin/direnv ]] && eval "$(direnv hook zsh)"

# asdf
#[[ -x $(brew --prefix)/bin/asdf ]] && . "$(brew --prefix asdf)/libexec/asdf.sh"

# 1Password
[[ -x $HOME/.config/op/plugins.sh ]] && source $HOME/.config/op/plugins.sh

if [[ $TERM_PROGRAM == "WarpTerminal" ]]; then
  eval "$(starship init zsh)"
fi
